package com.geeboo.app.shop.mongodb.handler;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.bson.Document;
import org.bson.conversions.Bson;
import org.bson.types.ObjectId;

import com.geeboo.app.shop.mongodb.factory.MongoClientFactory;
import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import com.mongodb.client.model.Filters;
import com.mongodb.client.result.DeleteResult;

/**
*mongoDB处理器
* 作者：tangwei
* 时间：2016-5-13 上午10:33:38
*/
public class MongoDBHandler {
	
	private MongoClient mongoClient = null;
	
	public MongoDBHandler() {
		MongoClientFactory mongoClientFactory = MongoClientFactory.getInstance();
		mongoClient = mongoClientFactory.getMongoClient();
	}
	
	 /**
     * 获取DB实例 - 指定DB
     * 
     * @param dbName
     * @return
     */
    public MongoDatabase getDB(String dbName) {
        if (dbName != null && !"".equals(dbName)) {
            MongoDatabase database = mongoClient.getDatabase(dbName);
            return database;
        }
        return null;
    }
    
    /**
     * 获取collection对象 - 指定Collection
     * 
     * @param collName
     * @return
     */
    public MongoCollection<Document> getCollection(String dbName, String collName) {
        if (null == collName || "".equals(collName)) {
            return null;
        }
        if (null == dbName || "".equals(dbName)) {
            return null;
        }
        MongoCollection<Document> collection = mongoClient.getDatabase(dbName).getCollection(collName);
        return collection;
    }

    /**
     * 查询DB下的所有表名
     */
    public List<String> getAllCollections(String dbName) {
        MongoIterable<String> colls = getDB(dbName).listCollectionNames();
        List<String> _list = new ArrayList<String>();
        for (String s : colls) {
            _list.add(s);
        }
        return _list;
    }

    /**
     * 获取所有数据库名称列表
     * 
     * @return
     */
    public MongoIterable<String> getAllDBNames() {
        MongoIterable<String> s = mongoClient.listDatabaseNames();
        return s;
    }

    /**
     * 删除一个数据库
     */
    public void dropDB(String dbName) {
        getDB(dbName).drop();
    }
    
    /**
     * 插入数据
     * @param dbName
     * @param collectionName
     * @param insertMap
     * @return
     */
    public boolean insert(MongoCollection<Document> coll, Map<String, Object> insertMap) {
        if (insertMap != null) {
        	coll.insertOne(new Document(insertMap));
            return true;
        }
        return false;
    }

    /**
     * 查找对象 - 根据主键_id
     * 
     * @param collection
     * @param id
     * @return
     */
    public Document findById(MongoCollection<Document> coll, String id) {
        ObjectId _idobj = null;
        try {
            _idobj = new ObjectId(id);
        } catch (Exception e) {
            return null;
        }
        Document myDoc = coll.find(Filters.eq("_id", _idobj)).first();
        return myDoc;
    }

    /** 统计数 */
    public int getCount(MongoCollection<Document> coll) {
        int count = (int) coll.count();
        return count;
    }

    /** 条件查询 */
    public MongoCursor<Document> find(MongoCollection<Document> coll, Bson filter) {
        return coll.find(filter).iterator();
    }

    /** 分页查询 */
    public MongoCursor<Document> findByPage(MongoCollection<Document> coll, Bson filter, int pageNo, int pageSize) {
        Bson orderBy = new BasicDBObject("_id", 1);
        return coll.find(filter).sort(orderBy).skip((pageNo - 1) * pageSize).limit(pageSize).iterator();
    }

    /**
     * 通过ID删除
     * 
     * @param coll
     * @param id
     * @return
     */
    public void deleteById(MongoCollection<Document> coll, String id) {
    	Bson filter = Filters.eq("id", Integer.valueOf(id));
    	coll.deleteOne(filter);
    }

    /**
     * 更新
     * @param coll
     * @param id
     * @param newdoc
     * @return
     */
    public Document updateById(MongoCollection<Document> coll, String id, Document newdoc) {
        Bson filter = Filters.eq("id", Integer.valueOf(id));
        coll.replaceOne(filter, newdoc);
        return newdoc;
    }

    /**
     * 删除某个表下面所有索引
     * @param dbName
     * @param collName
     */
    public void dropCollection(String dbName, String collName) {
        getCollection(dbName, collName).drop();
    }

    /**
     * 关闭Mongodb
     */
    public void close() {
        if (mongoClient != null) {
            mongoClient.close();
            mongoClient = null;
        }
    }

    /**
     * 测试入口
     * 
     * @param args
     */
    public static void main(String[] args) {
//    	MongoDBOperator mongoDBOperator = MongoDBOperator.getInstance();
//        String dbName = "DB_BOOK_SHOP";
//        String collName = "ES_GOODS";
//        MongoCollection<Document> coll = mongoDBOperator.getCollection(dbName, collName);

        // 插入多条
//         for (int i = 1; i <= 4; i++) {
//	         Document doc = new Document();
//	         doc.put("name", "zhangsan" + i);
//	         doc.put("age", "2" + i);
//	         doc.put("sex", i%2);
//	         coll.insertOne(doc);
//         }

        // // 根据ID查询
        // String id = "556925f34711371df0ddfd4b";
        // Document doc = MongoDBUtil2.instance.findById(coll, id);
        // System.out.println(doc);

        // 查询多个
//         MongoCursor<Document> cursor1 = coll.find(Filters.eq("name", "zhoulf")).iterator();
//         while (cursor1.hasNext()) {
//	         org.bson.Document _doc = (Document) cursor1.next();
//	         System.out.println(_doc.toString());
//         }
//         cursor1.close();

        // 查询多个
        // MongoCursor<Person> cursor2 = coll.find(Person.class).iterator();

        // 删除数据库
        // MongoDBUtil2.instance.dropDB("testdb");

        // 删除表
        // MongoDBUtil2.instance.dropCollection(dbName, collName);

        // 修改数据
        // String id = "556949504711371c60601b5a";
        // Document newdoc = new Document();
        // newdoc.put("name", "时候");
        // MongoDBUtil.instance.updateById(coll, id, newdoc);

        // 统计表
        // System.out.println(MongoDBUtil.instance.getCount(coll));

        // 查询所有
        //Bson filter = Filters.eq("count", 0);
        //mongoDBOperator.find(coll, filter);

    }
}
